# -*- coding: utf-8 -*-
"""MagudeswaranPK_2575106_day_9_practise_assignment_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AbISSxu_uuREQ0ddYzFtSeeAy5kl9Whc

# 1. Create a 3x3x3 array with random values
"""

import numpy as np

random_array = np.random.rand(3, 3, 3)

print(random_array)

"""# 2.Create a 5x5 matrix with values 1,2,3,4 just below the diagonal"""

import numpy as np

matrix = np.zeros((5, 5))

np.fill_diagonal(matrix[1:], [1, 2, 3, 4])

print(matrix)

"""# 3.Create a 8x8 matrix and fill it with a checkerboard pattern

"""

import numpy as np

checkerboard = np.zeros((8, 8), dtype=int)

checkerboard[1::2, ::2] = 1
checkerboard[::2, 1::2] = 1

print(checkerboard)

"""# 4. Normalize a 5x5 random matrix"""

import numpy as np

random_matrix = np.random.rand(5, 5)

mean = random_matrix.mean()
std_dev = random_matrix.std()

normalized_matrix = (random_matrix - mean) / std_dev

print("Original random matrix:")
print(random_matrix)
print("\nNormalized matrix:")
print(normalized_matrix)

"""# 5. How to find common values between two arrays?

"""

import numpy as np

array1 = np.array([1, 2, 3, 4, 5])
array2 = np.array([3, 4, 5, 6, 7])

common_values = np.intersect1d(array1, array2)
print(common_values)

"""# 6. How to get the dates of yesterday, today and tomorrow?"""

import numpy as np
import datetime

today = np.datetime64('today')

yesterday = today - np.timedelta64(1, 'D')
tomorrow = today + np.timedelta64(1, 'D')

today = today.astype(datetime.datetime)
yesterday = yesterday.astype(datetime.datetime)
tomorrow = tomorrow.astype(datetime.datetime)

print("Yesterday:", yesterday)
print("Today:", today)
print("Tomorrow:", tomorrow)

"""# 7. Consider two random array A and B, check if they are equal

"""

import numpy as np

A = np.random.rand(5)
B = np.random.rand(5)

are_equal = np.array_equal(A, B)

if are_equal:
    print("Arrays A and B are equal.")
else:
    print("Arrays A and B are not equal.")

"""# 8.Create random vector of size 10 and replace the maximum value by 0"""

import numpy as np

random_vector = np.random.rand(10)

max_index = np.argmax(random_vector)

random_vector[max_index] = 0

print("Random vector with the maximum value replaced:")
print(random_vector)

"""# 9. How to print all the values of an array?

"""

import numpy as np

my_array = np.array([1, 2, 3, 4, 5])
print(my_array)

"""# 10.Subtract the mean of each row of a matrix

"""

import numpy as np

matrix = np.array([[1, 2, 3],
                   [4, 5, 6],
                   [7, 8, 9]])

row_means = np.mean(matrix, axis=1, keepdims=True)

normalized_matrix = matrix - row_means

print("Original matrix:")
print(matrix)
print("\nMatrix with row-wise means subtracted:")
print(normalized_matrix)

"""# 11.Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)?"""

import numpy as np

given_vector = np.array([1, 2, 3, 4, 5])

index_vector = np.array([1, 3, 3, 4])

unique_indices, counts = np.unique(index_vector, return_counts=True)

given_vector[unique_indices] += 1

print("Given vector with 1 added at unique indices:")
print(given_vector)

"""# 12.How to get the diagonal of a dot product?"""

import numpy as np

A = np.array([[1, 2], [3, 4]])
B = np.array([[5, 6], [7, 8]])

dot_product = np.dot(A, B)

diagonal = np.diag(dot_product)

print("Matrix A:")
print(A)
print("\nMatrix B:")
print(B)
print("\nDot product of A and B:")
print(dot_product)
print("\nDiagonal of the dot product:")
print(diagonal)

"""# 13.How to find the most frequent value in an array?"""

import numpy as np

arr = np.array([1, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5])

unique_values, counts = np.unique(arr, return_counts=True)

mode_index = np.argmax(counts)

most_frequent_value = unique_values[mode_index]

print("Array:", arr)
print("Most frequent value(s):", most_frequent_value)

"""
# 14.How to get the n largest values of an array"""

import numpy as np

arr = np.array([3, 1, 4, 1, 5, 9, 2, 6, 5, 3])

n = 3
largest_values = np.partition(arr, -n)[-n:]

print("Array:", arr)
print(f"{n} Largest Values:", largest_values)

"""
# 15.How to create a record array from a regular array"""

import numpy as np

data = [(1, 'Alice', 25),
        (2, 'Bob', 30),
        (3, 'Charlie', 35)]

dtype = [('ID', int), ('Name', 'U10'), ('Age', int)]
structured_array = np.array(data, dtype=dtype)

record_array = structured_array.view(np.recarray)

print("Record Array:")
print(record_array)
print("\nAccessing elements:")
print("ID:", record_array.ID)
print("Name:", record_array.Name)
print("Age:", record_array.Age)

"""# 16. How to swap two rows of an array?"""

import numpy as np

array = np.array([[1, 2, 3],
                  [4, 5, 6],
                  [7, 8, 9]])

row1_index = 0
row2_index = 1

array[row1_index], array[row2_index] = array[row2_index].copy(), array[row1_index].copy()

print("Original array:")
print(array)

"""
# 17. Write python code to reshape to the next dimension of numpy array?"""

import numpy as np

array = np.array([1, 2, 3, 4, 5, 6])

reshaped_array = array.reshape(-1, 2)

print("Original array:")
print(array)
print("\nReshaped array:")
print(reshaped_array)